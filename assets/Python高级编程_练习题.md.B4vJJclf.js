import{_ as s,c as i,o as a,a6 as n}from"./chunks/framework.DkFL-jqo.js";const y=JSON.parse('{"title":"1-整除","description":"","frontmatter":{},"headers":[],"relativePath":"Python高级编程/练习题.md","filePath":"Python高级编程/练习题.md"}'),h={name:"Python高级编程/练习题.md"},k=n(`<h1 id="_1-整除" tabindex="-1">1-整除 <a class="header-anchor" href="#_1-整除" aria-label="Permalink to &quot;1-整除&quot;">​</a></h1><blockquote><p>父亲今年45岁，儿子今年15岁，问多少年前父亲年龄是儿子的11倍</p></blockquote><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">son_age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">farther_age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> farther_age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">son_age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">年前父亲年龄是儿子的11倍&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    son_age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    farther_age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><h1 id="_2-cookie" tabindex="-1">2-cookie <a class="header-anchor" href="#_2-cookie" aria-label="Permalink to &quot;2-cookie&quot;">​</a></h1><blockquote><p>列表推导式解析cookie</p></blockquote><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cookie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;aui=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%2522a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">liyun420090****%2522;cna=zf/eHf6pqVACAXHMMnuY05ad;tfstk=g0LHku0RwHSIH9r1Ff7IqV_y9an9OW_5cLUReaBrbOW_pJUpaackpBqd2QkBEUXN8gtde9BlrQ9m6x3xkBOCPwkxHqnBRgjfPTuRzqIO3G1oHx3xWBOCPakvpQ0nkHC5Q65PTMlg7sCczW5yUOSNgseFzaJrsCW1aaWyUal4bXWpdKLZdmQFqhVL9Ffhxt4RIz4ow6jh3BWG11TZFMX2TO4rnWnLtTX6uAnM1Kxep19ooAb2cdYl0a03h6xwiNWdumqG-CpBow8mKyCO59s24GcE8CbhKi1MQ7rh-3JBrMt3NjON8dtfhMosC1YpkgXfjRke6CXFm3vKCzWpmCJGDFeTkZ-XIUjVugy_booGBzZGelr7VM51stnZKeFXPyjhgfcg0gsF16gisfq7VM51sthisoJ5Y11IS;aliyun_lang=zh;atpsida=f8e6bf4d13c19f56bb1ff71a_1728978906_1;aliyun_site=CN;isg=BD8_wmT7ZHiCcWIy0PAgucQ0zhPJJJPGjE3-ntENhe414F9i2fUuFrniILAeo2s-;aliyun_country=CN;login_current_pk=1527572881437514;_abfpc=890519cc6e4a425e2920bd2783dfb05c75fdc087_2.0;_umdata=GCAA8875413D65CBCCA9622232084DB021185CD;_uab_collina=171811252022122912278165;channel=fH8EcKlATgVJhzvH7UPNnEVPPkdaBKzk2NpAwOxqLwI%3D;cnaui=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%2522a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">liyun420090****%2522;currentRegionId=cn-heyuan;FECS-XSRF-TOKEN=nucYtwqA;login_aliyunid_pk=1527572881437514;sca=dc7724c8;ssxmod_itna=YqRO7KBIxjhxCDnDl34+O8TFi=XwWR2GHKDQQ7FDlc=xA5D8D6DQeGTTurNITqIYOSr+aCQ1YT4TPo00nf5FG9dbddFoRYueDHxY=DU=8RwoD4SKGwD0eG+DD4DWDmW7DnxAQDjxGPB9EyzRxGWDm4CDWPDYxDr0EKDRxi7DDHQsx07DQ5CQDnCIDDzIW3bU1IoY9BHrIHIy1iwF7xCD7yIDlP5g84CafdXIlHwRbLhLAKDXEQDv6HzDKFIDBRCxRvhV7cDWBuDI2rd572qeexbQir3IChqeQh4kQi4rCeH/mNDi=p3fYD==;ssxmod_itna2=YqRO7KBIxjhxCDnDl34+O8TFi=XwWR2GHKDQQFD6EbR=D0yreq03iQIcGqNI0D8OF=8cneWT6zKOGWvpYQqRgI2ex5An398S+iDIUvHPFq79wpNXPAPuW6nW149OksAUgm2qLv/rM9M3l8d3dzDKf8q=tGo3GY7ddngtooe3EbfioEkuwjYR9jhXxCL=BU4xV9bc9+mNicqteMiXrkn+d2Mu5LZTPd1d4satT5PQGjxYB8jRpOMiZKqLDyaUrF=6qUe=R4/O/b9QnmMrqrmR1Ta8w8WrQNS2VmkGjUAI5zAgGvmCjzSPKxrDo33i36hYX41BT3SBx5eNK+QPlGWEkxh+5+dNg8KgGUO8enQM4O38WrYY3qzmETg+=fmwxgbUrwWSh5hbyfN+evIr+00WHWrKfo3uiG2pDgIAQWwS3TS=bRIFRQr8DVAFa3HDapuwLSrhscabfHyjockmTqfvoINCrjRvkhbrgdEnQVhQh4XY27snWVl6lmQF0tHWW2=C14aY2FO8CXSEW8DVQLHpofDDwaGYCDGSKtBhkD8lgxGfwqiDS0h=jqtGbdBKWL8Fuxd7SkAqt7+NN+7DM8BSABGjlGS1MYBS8jxf0qNTmmXCCskiZ0e71weh57MsyD5++1GGksDKeo6k2qGc7TzladqDGcDG7IiDD===;t=4842c17627505e9285c5cb438696dc42;yunpk=1527572881437514&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { item.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;=&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:item.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;=&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cookie.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(items)</span></span></code></pre></div><h1 id="_3-输出文件路径" tabindex="-1">3-输出文件路径 <a class="header-anchor" href="#_3-输出文件路径" aria-label="Permalink to &quot;3-输出文件路径&quot;">​</a></h1><blockquote><p>输出某文件夹下所有文件的绝对路径，包括该文件夹下文件夹的文件的路径。</p></blockquote><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print_all_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> root,dir_name,files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.walk(path):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> files:   </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(os.path.join(root,file_name))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print_all_file2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.scandir(p):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.is_file():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item.path)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            print_all_file2(item.path)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    print_all_file(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\p</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ython</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\测</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">开</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    print_all_file2(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">D:</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\p</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">ython</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\测</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">开</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h1 id="_4-回调函数" tabindex="-1">4-回调函数 <a class="header-anchor" href="#_4-回调函数" aria-label="Permalink to &quot;4-回调函数&quot;">​</a></h1><blockquote><p>回调函数：（回调模式）如果一个函数的参数是函数类型，那么我们可以把这个参数叫做回调函数</p><p>比较2个数的大小，并用不同风格输出 例如： compare 1 and 2, min = 1 1和2比较，最小的是1</p><p>函数中调用函数：1.如果调用的是自身，叫递归；2.如果调用的是别的函数，叫普通调用；3.如果借用参数调用的别的函数，叫回调；</p></blockquote><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, func):  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 来： 传来的函数func； 回：我把参数回传给你——func</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # func是回调函数的引用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    func(a, b, result)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 回调</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    f()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 普通调用</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 回调函数一</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> call_back_print_en</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, _min):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compare </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,min=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_min</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 回调函数二</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> call_back_print_zh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, _min):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 和 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">比较,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_min</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">最小&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    get_min(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, call_back_print_zh)</span></span></code></pre></div>`,12),l=[k];function t(p,e,E,r,d,g){return a(),i("div",null,l)}const o=s(h,[["render",t]]);export{y as __pageData,o as default};
