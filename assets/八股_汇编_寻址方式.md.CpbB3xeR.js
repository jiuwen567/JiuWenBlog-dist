import{_ as a,c as l,o as e,a6 as i}from"./chunks/framework.DkFL-jqo.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"八股/汇编/寻址方式.md","filePath":"八股/汇编/寻址方式.md"}'),p={name:"八股/汇编/寻址方式.md"},t=i('<h2 id="操作数" tabindex="-1">操作数 <a class="header-anchor" href="#操作数" aria-label="Permalink to &quot;操作数&quot;">​</a></h2><ol><li>立即数</li><li>寄存器操作数</li><li>内存操作数</li></ol><h2 id="操作数的寻址方式" tabindex="-1">操作数的寻址方式 <a class="header-anchor" href="#操作数的寻址方式" aria-label="Permalink to &quot;操作数的寻址方式&quot;">​</a></h2><p><a href="https://biancheng.45soft.com/asm/addressing/276.html" target="_blank" rel="noreferrer">汇编 操作数的寻址方式 相对基址加变址寻址方式 - 编程学习 (45soft.com)</a></p><p>寻址：在源程序中，寻找下一条指令或所需 操作数的地址的过程。</p><p><img src="https://typora5672.oss-cn-chengdu.aliyuncs.com/temp/image-20241127191339502.png" alt="image-20241127191339502"></p><p>段R：[ ①基址R＋②变址R *比例因子＋③位移量]</p><ul><li><p>(1)直接寻址； ③</p></li><li><p>(2)寄存器间接寻址； 只有①或只有②</p></li><li><p>(3)基址寻址(BX BP)</p></li><li><p>(4)变址寻址(SI DI) ① ②</p></li><li><p>(5)相对-基址寻址； ①+③</p></li><li><p>(6)相对-变址寻址； ②+③</p></li><li><p>(7)基址(加)变址； ①+②</p></li><li><p>(8)相对-基址(加)变址。①+②+③</p></li></ul><h2 id="ea" tabindex="-1">EA <a class="header-anchor" href="#ea" aria-label="Permalink to &quot;EA&quot;">​</a></h2><p>有效地址(EA)：在一个逻辑段中，某存储存储单元相对于段基址的地址位移量。</p><p>有效地址(EA)的组成部分：</p><ul><li><p>基址：存放在基址寄存器（BX、BP）的内容</p></li><li><p>变址：存放在变址寄存器（SI、DI）中的内容</p></li><li><p>比例因子：386及其后继机型新增加的术语。其值可为1，2，4，或8， 可用变址寄存器的内容乘以比例因子来取得变址值。</p></li><li><p>位移量：存放在指令中的一个8/16/32位的数，但它不是一个操作数，而是偏移地址的一部分</p></li><li><p>16位寻址时，EA只能由BX，SI，DI或BP提供。</p></li><li><p>其中，BX，SI，DI默认使用DS，BP默认使用SS。</p></li></ul><blockquote><p>注意：[ ]内不允许使用8位寄存器，同时不能 使用AX、CX、DX，包括：SP</p></blockquote>',13),o=[t];function r(s,n,c,_,h,d){return e(),l("div",null,o)}const f=a(p,[["render",r]]);export{u as __pageData,f as default};
