import{_ as l,c as i,o as t,a6 as r}from"./chunks/framework.DkFL-jqo.js";const _=JSON.parse('{"title":"性能指标","description":"","frontmatter":{},"headers":[],"relativePath":"性能测试/基础概念.md","filePath":"性能测试/基础概念.md"}'),o={name:"性能测试/基础概念.md"},s=r('<h1 id="性能指标" tabindex="-1">性能指标 <a class="header-anchor" href="#性能指标" aria-label="Permalink to &quot;性能指标&quot;">​</a></h1><p>在企业中，有时会用 <strong>吞吐量</strong> 当作 <strong>TPS</strong>；有的企业中，又会把 <strong>QPS</strong> 当作 <strong>TPS</strong> 来用。</p><h2 id="吞吐量" tabindex="-1">吞吐量 <a class="header-anchor" href="#吞吐量" aria-label="Permalink to &quot;吞吐量&quot;">​</a></h2><ul><li><strong>网络中</strong>，每秒传输的事务数。 <ul><li><strong>事务</strong>： <ul><li>一个完整的请求（发送请求和收到请求响应）——Jmeter默认时 <ul><li>性能测试请求：HTTP每个并发用户数，都是<strong>发出一个请求，一定是要收到这个请求的响应之后，才会发起下一个请求</strong>。</li></ul></li><li>事务控制器，控制多个接口的完整请求，作为一个事务。</li><li>做单接口的性能测试，得到响应时间，一般会比用户在界面上一个完整行为的响应时间要小。</li></ul></li><li>网络可能有瓶颈： <ul><li>无瓶颈时：每发1个请求，服务器处理并返回响应后，才发下一个请求。此时事务数量 = 服务器处理的数量。</li><li>有网络瓶颈（阻塞或丢包）：<strong>不能用吞吐量数值当作TPS值</strong>。</li></ul></li><li>负载测试时： <ul><li>并发用户数可变，吞吐量是平均值，无法反映实际并发用户数。</li><li><strong>负载测试时不能看吞吐量的值</strong>。</li></ul></li></ul></li></ul><h2 id="tps-qps-rps-hps" tabindex="-1">TPS/QPS/RPS/HPS <a class="header-anchor" href="#tps-qps-rps-hps" aria-label="Permalink to &quot;TPS/QPS/RPS/HPS&quot;">​</a></h2><ul><li><strong>TPS</strong>：<strong>服务器</strong>每秒处理的事务数。——衡量服务器处理能力的<strong>最重要综合指标</strong>。</li><li><strong>QPS</strong>：服务器每秒查询率。——服务器监控数据。 <ul><li>每个接口：请求次数 : 查询次数 = 1:k (k≥1)，正相关关系。</li><li>QPS变化代表TPS变化，因此企业常将QPS当作TPS描述服务器性能。</li></ul></li><li><strong>RPS</strong>：客户端每秒发起的请求数。</li><li><strong>HPS</strong>：客户端每秒发起的点击次数。</li></ul><h2 id="吞吐率" tabindex="-1">吞吐率 <a class="header-anchor" href="#吞吐率" aria-label="Permalink to &quot;吞吐率&quot;">​</a></h2><ul><li><strong>网络中</strong>，每秒传输的<strong>字节</strong>数量，单位一般为 <strong>KB/s</strong>（B=8b）。 <ul><li><strong>带宽</strong>：单位是 <strong>Mbps</strong>。 <ul><li>示例：带宽1M=1Mbps=1024Kbps=128KB/s（理论最大值）。</li><li>实际带宽分上行和下行，理论最大值仅为某一方向。</li><li><strong>性能测试不要用民用宽带</strong>。</li></ul></li><li>通过吞吐率数值可分析带宽是否为瓶颈。 <ul><li>示例：吞吐率267KB/s≈占用2M+带宽，若接近服务器带宽则成为瓶颈，否则不是。</li></ul></li></ul></li></ul><h2 id="资源利用率" tabindex="-1">资源利用率 <a class="header-anchor" href="#资源利用率" aria-label="Permalink to &quot;资源利用率&quot;">​</a></h2><ul><li><strong>不超过80%</strong>。 <ul><li>硬件资源：CPU、内存、磁盘、IO。</li><li>服务资源：容器、集群、资源。</li></ul></li></ul><blockquote><p>注：并发用户数增加不一定导致CPU利用率升高。</p></blockquote><hr><h1 id="性能测试条件" tabindex="-1">性能测试条件 <a class="header-anchor" href="#性能测试条件" aria-label="Permalink to &quot;性能测试条件&quot;">​</a></h1><ol><li><strong>独立测试环境</strong><ul><li>硬件配置与生产一致，数量可不同。</li></ul></li><li><strong>独立的网络</strong></li><li><strong>必要性研究</strong><ul><li>需明确侧重点，非所有功能都做性能测试。适用场景： <ul><li>有监管/验收明确要求。</li><li>涉及生命财产安全或民生。</li><li>大型项目上线、重大调整。</li><li>预计用户量剧增或产品核心功能。</li></ul></li></ul></li><li><strong>性能指标明确且可量化</strong><ul><li>反例：“产品最多支持多少人使用？”未明确功能、接口及时间要求。</li></ul></li></ol><hr><h1 id="性能测试流程" tabindex="-1">性能测试流程 <a class="header-anchor" href="#性能测试流程" aria-label="Permalink to &quot;性能测试流程&quot;">​</a></h1><ol><li><strong>性能需求分析</strong><ul><li>明确指标、熟悉业务、梳理接口/数据流、编写文档。</li></ul></li><li><strong>性能测试环境</strong><ul><li>自建或协助搭建，掌握核心参数；配置监控环境。</li></ul></li><li><strong>编写调试性能脚本</strong><ul><li>工具选择与脚本验证。</li></ul></li><li><strong>执行性能场景</strong><ul><li>场景设计、执行及记录。</li></ul></li><li><strong>问题跟踪与分析</strong><ul><li>分析优先级：脚本性能 &gt; 网络瓶颈 &gt; 服务器硬件 &gt; 应用服务/参数 &gt; 数据库。</li><li>部分问题可能需后续版本解决。</li></ul></li></ol><hr><h1 id="性能测试文档" tabindex="-1">性能测试文档 <a class="header-anchor" href="#性能测试文档" aria-label="Permalink to &quot;性能测试文档&quot;">​</a></h1><ul><li><strong>性能测试方案</strong><ul><li>背景、目标、团队、环境架构、测试策略（负载/压力测试）、场景、监控、输出、风险。</li></ul></li><li><strong>测试用例</strong><ul><li>接口/参数、场景策略、预期指标（并发用户数、TPS）。</li></ul></li><li><strong>测试记录</strong><ul><li>过程记录：脚本、执行命令、结果、监控数据（截图）、分析与结论。</li></ul></li><li><strong>测试报告</strong><ul><li>工具生成或手写，需包含： <ul><li>结论、环境组网、测试场景、记录、问题及调优记录（代码/参数）。</li></ul></li></ul></li></ul><blockquote><p><strong>注意</strong>：</p><ul><li>性能测试通常不用生产环境。</li><li>脚本不能复用功能测试脚本。</li><li>目标是发现数据背后的问题，而非仅获取数据。</li><li>优先测试高优先级接口。</li></ul></blockquote><hr><h1 id="性能测试工具" tabindex="-1">性能测试工具 <a class="header-anchor" href="#性能测试工具" aria-label="Permalink to &quot;性能测试工具&quot;">​</a></h1><ul><li><strong>JMeter</strong>（推荐JDK 1.8 + JMeter 5.1.1）</li></ul>',24),n=[s];function a(e,u,g,h,c,d){return t(),i("div",null,n)}const p=l(o,[["render",a]]);export{_ as __pageData,p as default};
