import{_ as a,c as e,o as t,a6 as o}from"./chunks/framework.DkFL-jqo.js";const f=JSON.parse('{"title":"数据传送指令","description":"","frontmatter":{},"headers":[],"relativePath":"八股/汇编/数据传送指令.md","filePath":"八股/汇编/数据传送指令.md"}'),r={name:"八股/汇编/数据传送指令.md"},l=o('<h1 id="数据传送指令" tabindex="-1">数据传送指令 <a class="header-anchor" href="#数据传送指令" aria-label="Permalink to &quot;数据传送指令&quot;">​</a></h1><ol><li>通用传送指令</li><li>堆栈传送指令</li><li>I/O传送指令</li></ol><h1 id="通用传送指令" tabindex="-1">通用传送指令 <a class="header-anchor" href="#通用传送指令" aria-label="Permalink to &quot;通用传送指令&quot;">​</a></h1><h4 id="lea指令" tabindex="-1">lea指令 <a class="header-anchor" href="#lea指令" aria-label="Permalink to &quot;lea指令&quot;">​</a></h4><p>load effective address, 加载有效地址，可以将有效地址传送到指定的的寄存器。指令形式是从存储器读数据到寄存器, 效果是将存储器的有效地址写入到目的操作数, 简单说, 就是C语言中的”&amp;”.</p><h1 id="堆栈传送指令" tabindex="-1">堆栈传送指令 <a class="header-anchor" href="#堆栈传送指令" aria-label="Permalink to &quot;堆栈传送指令&quot;">​</a></h1><blockquote><p>堆栈操作单位是字</p></blockquote><h1 id="算术运算类指令" tabindex="-1">算术运算类指令 <a class="header-anchor" href="#算术运算类指令" aria-label="Permalink to &quot;算术运算类指令&quot;">​</a></h1>',8),i=[l];function n(s,_,c,d,h,u){return t(),e("div",null,i)}const m=a(r,[["render",n]]);export{f as __pageData,m as default};
