import{_ as s,c as a,o as i,a6 as e}from"./chunks/framework.DkFL-jqo.js";const u=JSON.parse('{"title":"爬虫-导论","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"爬虫/导论.md","filePath":"爬虫/导论.md"}'),t={name:"爬虫/导论.md"},p=e(`<h1 id="爬虫-导论" tabindex="-1">爬虫-导论 <a class="header-anchor" href="#爬虫-导论" aria-label="Permalink to &quot;爬虫-导论&quot;">​</a></h1><h2 id="_1-统一资源定位符" tabindex="-1">1. 统一资源定位符 <a class="header-anchor" href="#_1-统一资源定位符" aria-label="Permalink to &quot;1. 统一资源定位符&quot;">​</a></h2><p><a href="https://www.baidu.com" target="_blank" rel="noreferrer">https://www.baidu.com</a></p><p><img src="https://typora567.oss-cn-chengdu.aliyuncs.com/temp_picture/image-20221101204852781.png" alt="image-20221101204852781"></p><p>资源路径：<code>域名</code>之后 <code>？</code> 之前</p><p><a href="https://www.baidu.com/s?wd=%E6%89%8B%E6%9C%BA%EF%BC%88%60%E5%85%B3%E9%94%AE%E8%AF%8D%60%EF%BC%89&amp;pn=20%EF%BC%88%60%E9%A1%B5%E7%A0%81%E4%B8%BA20%60%EF%BC%89" target="_blank" rel="noreferrer">https://www.baidu.com/s?wd=手机（\`关键词\`）&amp;pn=20（\`页码为20\`）</a></p><p>搜索字符串为？之后，有载荷</p><p><img src="https://typora567.oss-cn-chengdu.aliyuncs.com/temp_picture/image-20230112200902499.png" alt="image-20230112200902499"></p><p>基准网址：协议 + 域名 + 资源路径 + 搜索字符串</p><p><img src="https://typora567.oss-cn-chengdu.aliyuncs.com/temp_picture/image-20230112202338239.png" alt="image-20230112202338239"></p><h2 id="_2-dns-域名解析服务" tabindex="-1">2. DNS：域名解析服务 <a class="header-anchor" href="#_2-dns-域名解析服务" aria-label="Permalink to &quot;2. DNS：域名解析服务&quot;">​</a></h2><p><img src="https://typora567.oss-cn-chengdu.aliyuncs.com/temp_picture/image-20221102150040140.png" alt="image-20221102150040140"></p><ul><li><p>可直接通过红色框部分访问百度首页</p></li><li><p>浏览器所呈现的页面不是由一个请求构造而成</p></li></ul><h2 id="_3-请求" tabindex="-1">3. 请求 <a class="header-anchor" href="#_3-请求" aria-label="Permalink to &quot;3. 请求&quot;">​</a></h2><ol><li>静态请求</li></ol><p>网址导航栏输入的网址+html文件里面各种链接</p><p><code>文档下面找</code></p><p>get</p><p>状态码 200-300 响应正常 300~400 重定向 400-500 被反爬 500远程服务器本身的问题</p><ol start="2"><li>请求报头</li></ol><p>user-agent 用户代理 写死的，不会变化的</p><p>cookie 身份标识符 反爬的一种手段</p><p>referer 同一个域名之下哪一个页面跳转过来的</p><p>content-type 请求报文的类型</p><ol start="4"><li>动态请求</li></ol><p>javascrit 原生的通信架构 XMLHttpRequest | Fetch |jquery</p><p><code>Fetch/XHR</code>找</p><ol start="5"><li>请求行 + 报头 + 请求报文</li></ol><h2 id="_4-反爬手段" tabindex="-1">4. 反爬手段 <a class="header-anchor" href="#_4-反爬手段" aria-label="Permalink to &quot;4. 反爬手段&quot;">​</a></h2><p>报头--cookie referer 响应报文-js</p><p>fiddler模拟请求的原理：解析复制并发送浏览器发送请求包（<code>远程服务器到底有没有做反爬校验</code>）</p><p>浏览器发送的请求报文与fiddler所发送的请求报文一致</p><p>重要：user-agent cookie</p><h2 id="_5-反爬嗅探" tabindex="-1">5. 反爬嗅探 <a class="header-anchor" href="#_5-反爬嗅探" aria-label="Permalink to &quot;5. 反爬嗅探&quot;">​</a></h2><p>遇到反爬的表现结果如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1 响应的状态码不正常</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2 响应的结果不正常（要求登录之后。。。。）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3 状态码正常（请更换浏览器版本）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## \`\`》 如何寻找原因：报头和报文（post）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 1 用户代理 2 referer(boss直聘) 3 cookie（不是每一个cookie都会校验，找到需要校验的cookie）4 content-type 5 需要校验的报头</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 报文</span></span></code></pre></div><h2 id="_6-vscode断点" tabindex="-1">6. vscode断点 <a class="header-anchor" href="#_6-vscode断点" aria-label="Permalink to &quot;6. vscode断点&quot;">​</a></h2><p>继续：程序持续运行，直到下一处断点，或者程序运行完成，退出进程</p><p>单步跳过：步进，不会进入函数内部，直接运行到下一行代码</p><p>单步调试：步入，当遇到执行函数的时候，进入函数内部，否则运行到下一行代码</p><p>单步跳出：当在函数内部时，直接跳出当前函数</p><p><img src="https://typora567.oss-cn-chengdu.aliyuncs.com/temp_picture/%E8%85%BE%E8%AE%AF%E8%AF%BE%E5%A0%8220230107214918.png" alt=""></p><h3 id="_6-1-检测" tabindex="-1">6.1 检测 <a class="header-anchor" href="#_6-1-检测" aria-label="Permalink to &quot;6.1 检测&quot;">​</a></h3><p>检测状态码 <code>res.status_code</code></p><p>检测响应报文类型 <code>res.headers.get(&#39;content-type&#39;)</code></p><p>检测目标数据是否在响应报文里面&#39;目标数据&#39; in res.text</p><h3 id="_6-2-保存响应报文" tabindex="-1">6.2 保存响应报文 <a class="header-anchor" href="#_6-2-保存响应报文" aria-label="Permalink to &quot;6.2 保存响应报文&quot;">​</a></h3><p>在保存的文件的根目录里面，开启cmd,在cmd里面使用python开启http服务，浏览器访问 python -m http.server 1234</p><h2 id="_7-可能遇到的问题" tabindex="-1">7. 可能遇到的问题 <a class="header-anchor" href="#_7-可能遇到的问题" aria-label="Permalink to &quot;7. 可能遇到的问题&quot;">​</a></h2><ol><li>编码终端不同导致无法打印res.text</li></ol><p>方法一：选择code编码或者python运行</p><p>方法二：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.text.encode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">errors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ignore&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).decode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;utf-8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">errors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ignore&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><ol start="2"><li>远程服务器返回的登录校验码</li></ol><p>Session,token</p><h2 id="_8-json序列化-json" tabindex="-1">8. json序列化()json <a class="header-anchor" href="#_8-json序列化-json" aria-label="Permalink to &quot;8. json序列化()json&quot;">​</a></h2><ol><li>代码为：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>json.dumps(data)</span></span></code></pre></div><p><code>中文会被编码</code></p><p><code>不序列化会导致响应错误</code></p><ol start="2"><li>获取数据</li></ol><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res.text </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看响应内容,返回的是Unicode格式的数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res.json()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res.content</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看响应内容，返回字节流数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res.url</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看完整url地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res.encoding</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看响应头部字符编码</span></span></code></pre></div>`,62),n=[p];function l(o,h,r,c,d,k){return i(),a("div",null,n)}const E=s(t,[["render",l]]);export{u as __pageData,E as default};
