import{_ as i,c as l,o as a,a6 as s}from"./chunks/framework.DkFL-jqo.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"八股/操作系统/输入输出.md","filePath":"八股/操作系统/输入输出.md"}'),t={name:"八股/操作系统/输入输出.md"},e=s(`<h2 id="i-o设备分类" tabindex="-1">I/O设备分类 <a class="header-anchor" href="#i-o设备分类" aria-label="Permalink to &quot;I/O设备分类&quot;">​</a></h2><ol><li><p>与人进行交互</p><ul><li>用于和用户进行通信</li><li>打印机</li><li>视频显示设备 <ul><li>显示器</li><li>键盘</li><li>鼠标</li></ul></li></ul></li><li><p>与设备进行交互用于和电子设备进行通信</p><ul><li>磁盘和磁带</li><li>传感器</li><li>控制器</li><li>传动器</li></ul></li></ol><p>所有设备在操作系统中被粗略地分为两类</p><ul><li>块设备：以块为单位进行数据传输（可块寻址）</li><li>字符设备：以字符为单位进行数据传输</li><li>网络设备：网卡、网桥、集线器、路由器、网关…</li><li>更多：时钟设备、内存映射的显示器</li></ul><h2 id="i-o设备的不同" tabindex="-1">I/O设备的不同 <a class="header-anchor" href="#i-o设备的不同" aria-label="Permalink to &quot;I/O设备的不同&quot;">​</a></h2><ol><li><p>数据传输率</p><ul><li>不同设备在数据传输率上有可能相差几个数量级</li></ul></li><li><p>应用</p><p>如</p><ul><li>当磁盘用于存储文件时需要文件管理软件的配合</li><li>当磁盘用于存储虚页时需要特殊的硬件和软件的支持</li><li>被系统管理员使用的终端必须具有高级的优先权</li></ul></li><li><p>控制的复杂度</p></li><li><p>传输单位</p><ul><li>对于终端,数据的传输是以字符流为单位,而 磁盘则是以块为单位</li></ul></li><li><p>数据的表示方式</p><ul><li>不同设备编码方式不一样</li></ul></li><li><p>出错表示方式</p></li></ol><h2 id="i-o设备的组成" tabindex="-1">I/O设备的组成 <a class="header-anchor" href="#i-o设备的组成" aria-label="Permalink to &quot;I/O设备的组成&quot;">​</a></h2><ul><li>机械部分</li><li>电子部分</li></ul><blockquote><p>组成设备的电子部分就是设备控制器（一个设备控制器可以处理一类设备）</p></blockquote><p>控制器的任务：</p><ul><li>将串行的位流转换成字节块</li><li>尽可能进行纠错</li><li>可以与主存进行读写操作</li></ul><h2 id="i-o接口基本电路" tabindex="-1">I/O接口基本电路 <a class="header-anchor" href="#i-o接口基本电路" aria-label="Permalink to &quot;I/O接口基本电路&quot;">​</a></h2><p><img src="https://typora5672.oss-cn-chengdu.aliyuncs.com/temp/image-20241216193305181.png" alt="image-20241216193305181"></p><h2 id="i-o编址" tabindex="-1">I/O编址 <a class="header-anchor" href="#i-o编址" aria-label="Permalink to &quot;I/O编址&quot;">​</a></h2><p><img src="https://typora5672.oss-cn-chengdu.aliyuncs.com/temp/image-20241216193513598.png" alt="image-20241216193513598"></p><p>(a)单独的I/O和内存空间</p><p>(b) 内存映射I/O</p><p>(c) 混合方案</p><h2 id="i-o数据传输方式" tabindex="-1">I/O数据传输方式 <a class="header-anchor" href="#i-o数据传输方式" aria-label="Permalink to &quot;I/O数据传输方式&quot;">​</a></h2><ol><li>程序控制I/O <ul><li>在进行输入/输出时，CPU处于一种忙等待</li></ul></li><li>中断驱动I/O <ul><li>CPU发出I/O命令，由控制器具体执行</li><li>CPU转去执行其他指令</li></ul></li><li>控制器完成I/O后，向CPU发中断信号直接存储器存取 (DMA(Direct Memory Access)) <ul><li>由专门的DMA控制器控制数据在内存与外部设备间的传输</li><li>CPU仅仅在所有数据传输结束后进行中断干预</li><li>DMA传送操作</li><li><img src="https://typora5672.oss-cn-chengdu.aliyuncs.com/temp/image-20241216202735224.png" alt="image-20241216202735224"></li></ul></li><li>通道控制方式</li></ol><h2 id="i-o软件的目标" tabindex="-1">I/O软件的目标 <a class="header-anchor" href="#i-o软件的目标" aria-label="Permalink to &quot;I/O软件的目标&quot;">​</a></h2><ol><li><p>设备独立性</p><ul><li>程序能够访问任意的设备</li><li>不需要事先指定(如读取硬盘, 软盘, 或光驱)</li></ul></li><li><p>统一命名</p><ul><li>一个文件或设备的名字应该是一个简单的字符串或一个整数</li><li>不应依赖于任何设备</li></ul></li><li><p>错误处理</p><ul><li>错误应该尽可能在接近硬件层面得到处理</li></ul></li><li><p>同步(Synchronous)和异步( asynchronous) 传输</p></li></ol><ul><li>阻塞式传输和中断驱动传输</li></ul><ol start="5"><li>缓冲 <ul><li>数据离开一个设备后通常并不能直接存放到目的地</li></ul></li><li>共享设备和独占设备 <ul><li>磁盘是共享设备</li><li>磁带是独占性设备</li></ul></li></ol><h2 id="程序控制i-o" tabindex="-1">程序控制I/O <a class="header-anchor" href="#程序控制i-o" aria-label="Permalink to &quot;程序控制I/O&quot;">​</a></h2><p>打印一个字符串的步骤</p><p><img src="https://typora5672.oss-cn-chengdu.aliyuncs.com/temp/image-20241216203232686.png" alt="image-20241216203232686"></p><p>使用程序控制I/O将一个字符串写到打印机</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy_from_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buffer,p,count);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //p：内核空间缓存</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">printer_status_reg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">READY);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //忙等待循环，等待打印机的状态寄存器变为READY</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">printer_data_register </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[i];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //输出一个字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">return_to_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="中断驱动i-o" tabindex="-1">中断驱动I/O <a class="header-anchor" href="#中断驱动i-o" aria-label="Permalink to &quot;中断驱动I/O&quot;">​</a></h2>`,30),p=[e];function n(h,r,o,k,u,c){return a(),l("div",null,p)}const E=i(t,[["render",n]]);export{g as __pageData,E as default};
